<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="KinematicControl" Id="{de91caef-386b-43ef-9c44-406dad6ca978}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK KinematicControl
VAR
	
	_Master				: MasterAxisControl;
	_Slave				: ARRAY [1.._NumOfSlaves] OF SlaveAxisControl;
	
	_LocalState			: BYTE;
	_i					: BYTE;
	
END_VAR
VAR CONSTANT
	
	_NumOfSlaves		: BYTE := 3;

END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="CATest" Id="{f86d2470-1cfa-4f8f-b0a5-a709b8e28fb7}">
      <Declaration><![CDATA[METHOD CATest : BOOL
VAR_INPUT
	t	: LREAL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
// Define sizes

t := _Master.XCoordRelative + (_Master.AxisSize / 2);]]></ST>
      </Implementation>
    </Method>
    <Method Name="CyclicUpdate" Id="{a1c7abaa-811c-40fd-8aa1-380b619fe4b2}">
      <Declaration><![CDATA[METHOD CyclicUpdate : BOOL
VAR_INPUT
	xCoordMaster		: LREAL;
	yCoordMaster		: LREAL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
// Updates all axes internal states and variables

_Master.CyclicUpdate();
FOR _i := 1 TO _NumOfSlaves BY 1 DO
	_Slave[_i].CyclicUpdate();
END_FOR

_Master.XCoordRelative						:= xCoordMaster;
_Master.YCoordRelative						:= yCoordMaster;

_Slave[1].PreviousAnglePosition 			:= _Master.AnglePosition;
_Slave[1].PreviousLengthOfShaft 			:= _Master.LengthOfShaft;
_Slave[1].PreviousWidthOfShaft				:= _Master.WidthOfShaft;
_Slave[1].PreviousXCoordGlobal				:= _Master.XCoordRelative;
_Slave[1].PreviousYCoordGlobal				:= _Master.YCoordRelative;
_Slave[1].PreviousXCoordRelative			:= _Master.XCoordRelative;
_Slave[1].PreviousYCoordRelative			:= _Master.YCoordRelative;

IF _NumOfSlaves > 1 THEN
	FOR _i := 2 TO _NumOfSlaves BY 1 DO
		_Slave[_i].PreviousAnglePosition	:= _Slave[_i - 1].AnglePosition;
		_Slave[_i].PreviousLengthOfShaft 	:= _Slave[_i - 1].LengthOfShaft;
		_Slave[_i].PreviousWidthOfShaft		:= _Slave[_i - 1].WidthOfShaft;
		_Slave[_i].PreviousXCoordGlobal		:= _Slave[_i - 1].XCoordGlobal;
		_Slave[_i].PreviousYCoordGlobal		:= _Slave[_i - 1].YCoordGlobal;
		_Slave[_i].PreviousXCoordRelative	:= _Slave[_i - 1].XCoordRelative;
		_Slave[_i].PreviousYCoordRelative	:= _Slave[_i - 1].YCoordRelative;
	END_FOR	
END_IF]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="KinematicControl">
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="KinematicControl.CATest">
      <LineId Id="6" Count="0" />
      <LineId Id="5" Count="0" />
      <LineId Id="8" Count="0" />
      <LineId Id="7" Count="0" />
    </LineIds>
    <LineIds Name="KinematicControl.CyclicUpdate">
      <LineId Id="95" Count="0" />
      <LineId Id="65" Count="0" />
      <LineId Id="94" Count="0" />
      <LineId Id="66" Count="12" />
      <LineId Id="90" Count="1" />
      <LineId Id="79" Count="7" />
      <LineId Id="92" Count="1" />
      <LineId Id="87" Count="1" />
    </LineIds>
  </POU>
</TcPlcObject>